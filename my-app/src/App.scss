.hexagonField {
    display:grid;
    // --f: calc(1.732 * var(--s) + 4 * var(--m)  - 1px);
    //margin-left: 300px;
  }

  // .singleHexagon {
  //   // font-size: 0; /*disable white space between inline block element */
  // }

  .singleHexagon > div {
    --s: 100px;  /* size  */
    --m: 1px;    /* margin */
    --h: calc(var(--s)*1.1547);
    --b: calc(var(--m) - var(--s)*0.2885);
    width: var(--s);
    margin: var(--m);
    height: var(--h);
    margin-bottom: calc(var(--m) - var(--s)*0.2885);
    display:inline-flex;
    font-size:30px;
    font-weight: bold;
    color: black;
    // make a hexagon out of the rectangle
    clip-path: polygon(0% 25%, 0% 75%, 50% 100%, 100% 75%, 100% 25%, 50% 0%);
    // Align the numbers on the hexagon
    align-items: center;
    justify-content: center;
}

/* Mobile view (up to 768px) */
@media screen and (min-width: 362px) and (max-width: 768px) {
  .singleHexagon > div {
    --s: 50px; /* Adjust size for mobile */
    --m: 0.5px; /* Adjust margin for mobile */
    --h: calc(var(--s) * 1.1547); /* Update --h directly based on adjusted --s */
    --b: calc(var(--m) - var(--s) * 0.2885); /* Update --b directly based on adjusted --m */
    font-size:15px;

  }
}

.shiftLeftElement {
  margin-left: var(--shiftLeft);
}

// shifts the hexagon row with 3 landfields to the appropriate position
.three {
  --shiftLeft: 102px;
  margin-left: var(--shiftLeft);
}

@media screen and (max-width: 768px) {
  .three {
    // margin-left: calc(var(--shiftLeft) * 0.6px);
    margin-left: calc(var(--shiftLeft) * 0.5);
    // margin-left: 61px;
  }
}

// shifts the hexagon row with 4 landfields to the appropriate position
.four {
  --shiftLeft: 51px;
  margin-left: var(--shiftLeft);
}

@media screen and (max-width: 768px) {
  .four {
    // margin-left: calc(var(--shiftLeft) * 0.6px);
    margin-left: calc(var(--shiftLeft) * 0.5);
    // margin-left: 61px;
  }
}

// shifts the hexagon upper and lowest waterrow with 4 waterfields to the appropriate position
.fourWaters{
  --shiftLeft: 153px;
  margin-left: var(--shiftLeft);
}



@media screen and (max-width: 768px) {
  .fourWaters {
    // margin-left: calc(var(--shiftLeft) * 0.6px);
    margin-left: calc(var(--shiftLeft) * 0.5);
    // margin-left: 61px;
  }
}


.hexagonBg {
  background-color: #efbe70;
  padding: 5px;
  border-radius: 100%;
  width: 33px;
  text-align: center;
  border: solid rgb(54, 54, 54) 1px;
  font-family: "lucida bright";
  font-size: 32px;
}

@media screen and (max-width: 768px) {
  .hexagonBg {
    padding: 3px;
    width: 19px;
    font-size: 18px;
  }
}


  .wood {
    background-image: url("../public/images/wood.jpg");
    background-size: cover;
  }

  .clay {
    background-image: url("../public/images/clay.jpg");
    background-size: cover;
  }

  .sheep {
    background-image: url("../public/images/sheep.jpg");
    opacity: 0.9;
    background-size: cover;
  }

  .weat {
    background-image: url("../public/images/weat.jpg");
    opacity: 0.8;
    background-blend-mode: lighten;
    background-size: cover;
  }

  .stone {
    background-image: url("../public/images/stone.jpg");
    background-size: cover;
  }

  .desert {
    background-image: url("../public/images/desert.jpg");
    background-size: cover;
  }

  .water {
    background-image: url("../public/images/water.jpg");
    background-size: cover;
  }

  .sheepPort {
    background-image: url("../public/images/port_sheep.jpg");
    background-size: cover;
  }

  .weatPort {
    background-image: url("../public/images/port_weat.jpg");
    background-size: cover;
  }

  .woodPort {
    background-image: url("../public/images/port_wood.jpg");
    background-size: cover;
  }

  .clayPort {
    background-image: url("../public/images/port_clay.jpg");
    background-size: cover;
  }

  .stonePort {
    background-image: url("../public/images/port_stone.jpg");
    background-size: cover;
  }

  .threeToOnePort {
    background-image: url("../public/images/port_3to1.jpg");
    background-size: cover;
  }

  .portRotation180Deg {
    transform: rotate(180deg);
  }

  .portRotation60Deg {
    transform: rotate(60deg);
  }

  .portRotation200Deg {
    transform: rotate(-60deg);
  }

  .hidden {
    color: transparent;
    background: transparent;
    border: transparent;
  }

  .redNumber {
    color: red;
  }

.tableHeader {
  align-self: flex-start;
}

.headerMapName {
  align-self: center;
}
